@page
@using System.Diagnostics
@using DataBase
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Diagnostics
@model PhoneDB.Pages.Admin.Phone.EditModel
@{
    ViewData["Title"] = "Edit";


    async Task RenderPropertyRows(List<Property> properties)
    {
        @foreach (var property in properties)
        {
            <li class="list-group-item">
                <div class="row align-items-center">
                    <div class="col">
                        @(property.PropertyType.Name)
                    </div>
                    <div class="col">
                        @(property.PropertyType.TypeName)
                    </div>
                    <div class="col">
                        @(property.Data.ToString())
                    </div>
                    <div class="col">
                        <div class="d-flex justify-content-end gap-2">
                            <a asp-page="@($"/Admin/Property/{property.PropertyType.TypeName}/Edit")"
                               asp-route-PropertyId="@(property.Id)"
                               class="btn btn-outline-primary material-symbols-outlined  align-middle">edit</a>

                            <a asp-page="@($"/Admin/Property/{property.PropertyType.TypeName}/Delete")"
                               asp-route-PropertyId="@(property.Id)"
                               class="btn btn-outline-primary material-symbols-outlined  align-middle">delete</a>
                        </div>
                    </div>
                </div>
            </li>
        }
    }


    async Task RenderAddPropertyType(
        DataBase.Section section,
        List<PropertyType> propertyTypes
    )
    {
        <li class="list-group-item">
            <div class="row align-items-center">
                <div class="col fst-italic">
                    Add new property to section
                    <bold class="fw-bold">

                        @(section.SectionType.Name).
                    </bold>
                </div>

                <div class="col">
                    <div class="d-flex justify-content-end gap-2">


                        <div class="dropdown">
                            <button
                                class="btn btn-outline-primary dropdown-toggle material-symbols-outlined  align-middle"
                                disabled="@(!propertyTypes.Any())"
                                type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                add
                            </button>

                            <ul class="dropdown-menu">
                                @foreach (var propertyType in propertyTypes)
                                {
                                    <li>
                                        <a class="dropdown-item"
                                           asp-route-sectionId="@(section.Id)"
                                           asp-route-propertyTypeId="@(propertyType.Id)"
                                           asp-page="@($"/Admin/Property/{propertyType.TypeName}/Create")"

                                        >[@(propertyType.TypeName)] @(propertyType.Name)</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </li>
    }

    async Task RenderEmptyRow()
    {
        <li class="list-group-item">
            <div class="row align-items-center">
                <div class="col fst-italic">
                    There is no properties in this section.

                </div>
            </div>
        </li>
    }


    async Task RenderHead(int phoneId, List<SectionType> unusedSectionTypes)
    {
        <div class="d-flex flex-column justify-content-between gap-2">
            <div class="d-flex justify-content-between">
                <h1 class="fs-3 fw-bold">Phone: @(Model.Phone.Name)</h1>
                <a asp-route-id="@(Model.Phone.Id)" asp-page="/Admin/Phone/Delete"
                   class="btn btn-outline-danger material-symbols-outlined  align-middle">delete</a>
            </div>
            <div class="d-flex justify-content-between">
                <h2 class="fs-3 fw-bold">Sections</h2>
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle material-symbols-outlined  align-middle"
                            disabled="@(!unusedSectionTypes.Any())"
                            type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        add
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (var sectionType in unusedSectionTypes)
                        {
                            <li>
                                <button class="dropdown-item" type="button">
                                    <a asp-page="/Admin/Section/Create"
                                       asp-route-phoneId="@(Model.Phone.Id)"
                                       asp-route-sectionTypeId="@(sectionType.Id)">
                                        @(sectionType.Name)
                                    </a>
                                </button>
                            </li>
                        }
                    </ul>
                </div>

            </div>
        </div>
    }

    async Task RenderSectionHead(DataBase.Section section)
    {
        <li class="list-group-item">
            <div class="row align-items-center">
                <div class="col fs-3 fw-bold">
                    @(section.SectionType.Name)

                </div>
                <div class="col">

                </div>
                <div class="col">
                    <div class="d-flex justify-content-end gap-2">
                        <a asp-page="/Admin/Phone/Section/Delete" asp-route-id="@(section.Id)"
                           class="btn btn-outline-danger material-symbols-outlined  align-middle">delete</a>
                    </div>
                </div>
            </div>
        </li>
    }
}

<div clsas="container">
    <div class="d-flex flex-column gap-2">

        @{ await RenderHead(Model.Phone.Id, Model.UnusedSectionTypes); }
        <a class="text-info"
           asp-page="./EditPhoneName"
           asp-route-PhoneId="@(Model.Phone.Id)">Edit phone name</a>
        
        
        <div class="d-flex flex-column justify gap-5 w-100">

            @foreach (var section in Model.Phone.Sections.OrderBy(section => section.SectionType.Name))
            {
                <div class="card">
                    <ul class="list-group">
                        @{ await RenderSectionHead(section); }
                        <li class="list-group-item">
                            <div class="row align-items-center">
                                <div class="col fw-bold">
                                    Property
                                </div>
                                <div class="col fw-bold">
                                    Type
                                </div>
                                <div class="col fw-bold">
                                    Value
                                </div>
                                <div class="col fw-bold text-end">
                                    Actions
                                </div>
                            </div>
                        </li>
                        @{ await RenderPropertyRows(Model.PropertiesPerSection[section]); }
                        @if (Model.Phone.Sections.Count.Equals(0))
                        {
                            await RenderEmptyRow();
                        }

                        @{ await RenderAddPropertyType(section, Model.UnusedPropertyTypesPerSection[section]); }
                    </ul>
                </div>
            }
        </div>

    </div>
</div>
